<Window x:Class="WPF.View.BindingPathDemo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF.View"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="BindingPathDemo" Height="450" Width="800">
    <Grid>
        <StackPanel>
            <StackPanel.Resources>
                <sys:String x:Key="myString">
                    菩提本无树，明镜亦非台。
                    本来无一物，何处惹尘埃。
                </sys:String>
            </StackPanel.Resources>
            <!--Path是一个“.”或者干脆没有Path的Binding,着实让人摸不着头脑。原来，这是一种比较特殊的情况一Binding源本身就是数据且不需要Path来指明。典型的，string、int等基本类型就是这样，
            他们的实例本身就是数据，我们无法指出通过它的哪个属性来访问这个数据，这时我们只需将Path的值设置为“.”就可以了。在XAML代码里这个“”可以省略不写，但在C#代码里却不能省略。-->
            <!--<TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="{Binding Path=.,Source={StaticResource ResourceKey=myString}}" FontSize="16" Margin="5"/>-->
            <!--<TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="{Binding .,Source={StaticResource ResourceKey=myString}}" FontSize="16" Margin="5"/>-->
            <!--<TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="{Binding Source={StaticResource ResourceKey=myString}}" FontSize="16" Margin="5"/>-->
            <TextBlock x:Name="textBlock1" TextWrapping="Wrap" FontSize="16" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>
