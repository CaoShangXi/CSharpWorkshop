<Window x:Class="WPF.View.BindingDemo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF.View"
        mc:Ignorable="d"
        Title="BindingDemo" Height="450" Width="800">
    <StackPanel>
        <StackPanel Background="AliceBlue">
            <TextBox x:Name="textBoxName" BorderBrush="Black" Margin="5"/>
            <Button Content="Add Age" Margin="5" Click="Button_Click"/>
        </StackPanel>

        <StackPanel Background="Aqua">
            <!--1.控制Binding数据流向的属性是Mode,它的类型是BindingMode枚举。BindingMode可取值
                为TwoWay、OneWay、OnTime、OneWayToSource和Default。这里的Default值是指Binding的模
                式会根据目标的实际情况来确定，比如若是可编辑的（如TextBox.Iex属性），Default就采用双向
                模式；若是只读的（如TextBlock.Text)则采用单向模式。-->
            <!--Default 4:使用绑定目标的默认 Mode 值。 每个依赖属性的默认值都不同。 通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。 确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 GetMetadata(Type) 获取属性的属性元数据，然后检查 BindsTwoWayByDefault 属性的布尔值。-->
            <!--OneTime 2:在应用程序启动或数据上下文更改时，更新绑定目标。 如果你在适合使用当前状态的快照或数据实际为静态数据的位置使用数据，则此类型的绑定适合。 如果你想使用源属性中的某个值来初始化目标属性，且提前不知道数据上下文，则此类型的绑定也有用。 这是实质上是 OneWay 绑定的一种简化形式，它在源值不更改的情况下提供更好的性能。-->
            <!--OneWay 1:在更改绑定源（源）时更新绑定目标（目标）。 如果绑定的控件为隐式只读，则此类型的绑定适用。 例如，你可能绑定到股票代码等源。 或者可能是未向目标属性提供控件接口来进行更改，例如表的数据绑定背景色。 如果无需监视目标属性的更改，则使用 OneWay 绑定模式可避免 TwoWay 绑定模式的系统开销。-->
            <!--OneWayToSource 3:在目标属性更改时，更新源属性。-->
            <!--TwoWay 0:导致更改源属性或目标属性时自动更新另一方。 这种类型的绑定适用于可编辑的表单或其他完全交互式 UI 方案。
            UpdateSourceTrigger（更新源触发器）
            Default	0	绑定目标属性的默认 UpdateSourceTrigger 值。 大多数依赖属性的默认值为 PropertyChanged，而 Text 属性的默认值为 LostFocus。
            Explicit	3	仅在调用 UpdateSource() 方法时更新绑定源。
            LostFocus	2	每当绑定目标元素失去焦点时，都会更新绑定源。
            PropertyChanged	1	每当绑定目标属性发生更改时，都会更新绑定源。-->
            <TextBox x:Name="textBox1" Text="{Binding Path=Value,ElementName=slider1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}" BorderBrush="Black" Margin="5"/>
            <Slider x:Name="slider1" Maximum="100" Minimum="0" Margin="5"/>
        </StackPanel>
        <StackPanel>
            <TextBox x:Name="txt1" BorderBrush="Red" Margin="5"/>
            <TextBox x:Name="txt2" Text="{Binding Text.Length,ElementName=txt1,Mode=OneWay}"/>
        </StackPanel>
        <StackPanel>
            <TextBox x:Name="txt3" BorderBrush="Red" Margin="5"/>
            <TextBox x:Name="txt4"/>
        </StackPanel>
        <StackPanel>
            <TextBox x:Name="txt5"/>
            <TextBox x:Name="txt6"/>
            <TextBox x:Name="txt7"/>
        </StackPanel>
        <StackPanel>
            <TextBox x:Name="txt8"/>
            <TextBox x:Name="txt9"/>
            <TextBox x:Name="txt10"/>
        </StackPanel>
    </StackPanel>
</Window>
